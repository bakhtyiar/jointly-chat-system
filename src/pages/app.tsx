import Head from 'next/head'
import React from "react";
import AppLayout from "@/components/AppLayout/AppLayout";
import styled from "@emotion/styled";
import {Box, Button} from "@mui/material";
import {ChatList} from "@/components/ChatList/ChatList";
import {MessagesList} from "@/components/MessagesList/MessagesList";
import {ChatInput} from "@/components/ChatInput/ChatInput";
import {pt3} from "@/utils/styleVariables";
import {ChatHeader} from "@/components/ChatHeader/ChatHeader";
import {ChatMedia} from "@/components/ChatMedia/ChatMedia";

const StyledMain = styled.main`
  justify-content: start;
  height: 100vh;
  display: flex;
  flex-direction: row;
  align-items: stretch;
  margin: 0;
  overflow-y: auto;
`

const StyledFriendsButton = styled(Button)`
  width: 100%;
  margin-top: ${pt3};
`

export default function Index() { //page as a link for redirect to initial application route
    const [openMedia, setOpenMedia] = React.useState(false);

    const handleDrawerOpen = () => {
        setOpenMedia(true);
    };

    const handleDrawerClose = () => {
        setOpenMedia(false);
    };
    return (
        <>
            <Head>
                <title>Jointly</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <AppLayout>
                <StyledMain>
                    <Box
                        sx={{
                            height: '100%',
                            overflowY: 'hidden',
                            display: 'flex',
                            flexDirection: 'column',
                            flexShrink: "1",
                        }}
                    >
                        <StyledFriendsButton variant="text">Friends</StyledFriendsButton>
                        <ChatList/>
                    </Box>
                    <Box
                        sx={{
                            height: '100%',
                            overflowY: 'hidden',
                            display: 'flex',
                            flexDirection: 'column',
                            flexGrow: '1',
                            padding: '0'
                        }}
                    >
                        <ChatHeader handleDrawerOpen={handleDrawerOpen}/>
                        <MessagesList/>
                        <ChatInput/>
                    </Box>
                    {openMedia && <ChatMedia handleDrawerClose={handleDrawerClose} isOpen={openMedia}/>}
                </StyledMain>
            </AppLayout>
        </>
    )
}
